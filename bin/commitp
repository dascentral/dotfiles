#!/usr/bin/env bash

GREEN='\033[1;32m'
YELLOW='\033[1;33m'
WHITE='\033[1;37m'
NC='\033[0m'

warn() {
    echo "$@" >&2;
}

die() {
    warn "$@"; exit 1;
}

escape() {
    echo "$1" | sed 's/\([\.\$\*]\)/\\\1/g'
}

has() {
    local item=$1; shift
    echo " $@ " | grep -q " $(escape $item) "
}

git_local_branches() {
    git branch --no-color | sed 's/^[* ] //';
}

git_local_branch_exists() {
    has $1 $(git_local_branches)
}

git_current_branch() {
	git branch --no-color | grep '^\* ' | grep -v 'no branch' | sed 's/^* //g'
}

hubflow_has_master_configured() {
    local master=$(git config --get hubflow.branch.master)
    [ "$master" != "" ] && git_local_branch_exists "$master"
}

hubflow_has_develop_configured() {
    local develop=$(git config --get hubflow.branch.develop)
    [ "$develop" != "" ] && git_local_branch_exists "$develop"
}

hubflow_has_prefixes_configured() {
    git config --get hubflow.prefix.feature >/dev/null 2>&1     && \
    git config --get hubflow.prefix.release >/dev/null 2>&1     && \
    git config --get hubflow.prefix.hotfix >/dev/null 2>&1      && \
    git config --get hubflow.prefix.support >/dev/null 2>&1     && \
    git config --get hubflow.prefix.versiontag >/dev/null 2>&1
}

hubflow_is_initialized() {
    hubflow_has_master_configured                    && \
    hubflow_has_develop_configured                   && \
    [ "$(git config --get hubflow.branch.master)" !=    \
      "$(git config --get hubflow.branch.develop)" ] && \
    hubflow_has_prefixes_configured
}

# Validation is complete. Processing may commence.
###############################################################################

if ! hubflow_is_initialized; then
    die "Not a hubflow-enabled repo yet. Please run \"git hf init\" first."
else
    echo 'initialized'
fi

# if [ hubflow_is_initialized ]; then
#     echo 'enabled'
# else
#     echo 'no hubflow'
# fi

exit 0

# prepare commit message
commitMessage="$1"
if [ "$commitMessage" = "" ]; then
    commitMessage="WIP"
fi

# add and commit all items
# git add .
# eval "git commit -a -m '${commitMessage}'"

# push accordingly
# if hubflow enabled
#git hf push
# else
#git push
#fi
